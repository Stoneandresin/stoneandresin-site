"use strict";(()=>{var e={};e.id=587,e.ids=[587],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9561:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>m,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>g,staticGenerationAsyncStorage:()=>v});var n={};t.r(n),t.d(n,{POST:()=>d});var s=t(9303),o=t(8716),a=t(3131),i=t(7070);let u=require("crypto");var p=t.n(u);async function d(e){let r=e.headers.get("x-admin-key")||"";if(!process.env.ADMIN_KEY||r!==process.env.ADMIN_KEY)return i.NextResponse.json({error:"forbidden"},{status:403});let t=process.env.CLOUDINARY_CLOUD_NAME,n=process.env.CLOUDINARY_API_KEY,s=process.env.CLOUDINARY_API_SECRET;if(!t||!n||!s)return i.NextResponse.json({error:"Missing Cloudinary env vars"},{status:500});let o="before-after",a=Math.floor(Date.now()/1e3),u=`folder=${o}&timestamp=${a}${s}`,d=p().createHash("sha1").update(u).digest("hex");return i.NextResponse.json({cloudName:t,apiKey:n,folder:o,timestamp:a,signature:d})}let c=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/cloudinary/sign/route",pathname:"/api/cloudinary/sign",filename:"route",bundlePath:"app/api/cloudinary/sign/route"},resolvedPagePath:"/home/runner/work/stoneandresin-site/stoneandresin-site/app/api/cloudinary/sign/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:l,staticGenerationAsyncStorage:v,serverHooks:g}=c,m="/api/cloudinary/sign/route";function h(){return(0,a.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:v})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[948,972],()=>t(9561));module.exports=n})();