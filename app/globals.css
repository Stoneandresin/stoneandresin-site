@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --brand: #0a5c5a;
  --brand-dark: #064543;
}

html { scroll-behavior: smooth; }
body { @apply bg-white text-gray-900; }

.btn {
  @apply inline-flex items-center gap-2 rounded-2xl px-5 py-3 font-semibold transition;
  background: var(--brand);
  color: white;
}
.btn:hover { background: var(--brand-dark); }
.btn-outline {
  @apply inline-flex items-center gap-2 rounded-2xl px-5 py-3 font-semibold border border-gray-300 text-gray-900;
}
.section-title { @apply text-3xl md:text-4xl font-bold tracking-tight; }
.subtle { @apply text-gray-600; }
.card { @apply rounded-2xl shadow-sm border border-gray-100 bg-white; }
.input { @apply w-full rounded-xl border border-gray-300 px-4 py-3 focus:outline-none focus:ring-2 focus:ring-emerald-500; }
.label { @apply text-sm font-medium text-gray-700; }

/* Projects link removed in Navbar and /projects redirects to /gallery */

/* Avoid globally hiding horizontal overflow to prevent clipping of fixed/off-canvas widgets.
   Control overflow at the component level (e.g., ColorsSlider) instead. */
/* Avoid globally hiding horizontal overflow to prevent clipping of fixed/off-canvas widgets.
   Control overflow at the component level (e.g., ColorsSlider) instead. */

/* Reveal on scroll animation */
.reveal { opacity: 0; transform: translateY(8px); transition: opacity .5s ease, transform .5s ease; }
.reveal.is-inview { opacity: 1; transform: translateY(0); }

@layer components {
  .page-bg { @apply bg-slate-50; }

  /* Light surfaces */
  .surface-1 { @apply bg-white border border-slate-200 shadow-sm; }
  .surface-2 { @apply bg-white/70 border border-slate-200/60; }

  /* Copy */
  .copy { @apply text-slate-800; }
  .copy-muted { @apply text-slate-600; }

  /* Navbar (light) */
  .nav-light { @apply bg-white/90 backdrop-blur border-b border-slate-200 text-slate-900; }
  .link { @apply text-slate-700 hover:text-slate-900; }

  /* Buttons */
  .btn { @apply inline-flex items-center justify-center rounded-md px-5 py-2.5 font-semibold text-white bg-indigo-600 hover:bg-indigo-700 shadow-sm; }
  .btn-ghost { @apply inline-flex items-center justify-center rounded-md px-5 py-2.5 font-semibold text-slate-700 hover:bg-slate-100; }
  .accent-text { @apply bg-gradient-to-r from-indigo-700 via-blue-600 to-sky-500 bg-clip-text text-transparent; }
}

/* filepath: /Users/aaronspaulding/Downloads/stoneandresin-site-main/components/Hero.tsx */
'use client'

import { useEffect, useState } from 'react'
import Image from 'next/image'

type Settings = Record<string, any> | null

export default function Hero() {
  const [settings, setSettings] = useState<Settings>(null)

  useEffect(() => {
    let mounted = true
    fetch('/api/admin/settings')
      .then((r) => (r.ok ? r.json() : null))
      .then((data) => mounted && setSettings(data))
      .catch(() => {})
    return () => { mounted = false }
  }, [])

  return (
    <section className="py-14 md:py-16">
      <div className="container mx-auto px-4 grid md:grid-cols-2 gap-10 items-center">
        <div>
          <div className="inline-flex items-center gap-2 rounded-full px-3 py-1 text-sm bg-slate-100 text-slate-700 border border-slate-200">
            <span className="h-1.5 w-1.5 rounded-full bg-indigo-600" />
            New for 2025 • Permeable, UV‑stable, anti‑slip
          </div>

          <h1 className="mt-4 text-4xl md:text-5xl font-extrabold leading-tight">
            Resin‑bound surfaces that
            <span className="block accent-text">elevate your curb appeal</span>
          </h1>

          <p className="mt-4 copy-muted max-w-xl">
            Modern driveways, patios, and pool decks—durable, permeable, and low maintenance. Installed by certified pros.
          </p>

          <div className="mt-6 flex flex-wrap gap-3">
            <a href="/pricing" className="btn">Get Instant Estimate</a>
            <a href="/learn" className="btn-ghost">How it works</a>
          </div>

          <div className="mt-6 flex flex-wrap items-center gap-4 text-sm copy-muted">
            <span className="inline-flex items-center gap-1">
              <span aria-hidden>★</span> 4.9 on Google
            </span>
            <span className="h-4 w-px bg-slate-300" />
            <span>10‑year warranty</span>
            {settings?.badge && (
              <>
                <span className="h-4 w-px bg-slate-300" />
                <span>Certified: {settings.badge}</span>
              </>
            )}
          </div>
        </div>

        <div className="relative">
          <div className="surface-1 rounded-2xl p-2 overflow-hidden">
            <div className="relative aspect-[16/10] w-full overflow-hidden rounded-xl">
              <Image
                src="/hero/sample-surface.jpg"
                alt="Resin-bound surface example"
                fill
                className="object-cover"
                sizes="(max-width: 768px) 100vw, 50vw"
                priority
              />
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

/* filepath: /Users/aaronspaulding/Downloads/stoneandresin-site-main/components/ColorsSlider.tsx */
'use client'

import Image from 'next/image'
import { useEffect, useState } from 'react'

const colors = [
  { name: 'Desert Sand', hex: '#EDC9A3', src: '/colors/desert-sand.jpg' },
  { name: 'Copper Penny', hex: '#B76E3D', src: '/colors/copper-penny.jpg' },
  { name: 'Basalt', hex: '#4E5452', src: '/colors/basalt.jpg' },
  { name: 'Olive Grove', hex: '#7D8B5A', src: '/colors/olive-grove.jpg' },
  { name: 'Midnight Black', hex: '#101820', src: '/colors/midnight-black.jpg' },
]

export default function ColorsSlider() {
  const [selectedIndex, setSelectedIndex] = useState(0)
  const [mounted, setMounted] = useState(false)

  useEffect(() => {
    setMounted(true)
  }, [])

  if (!mounted) return null

  return (
    <div className="relative py-16">
      <div className="container mx-auto px-4">
        <div className="flex flex-col gap-8">
          <div className="flex flex-col gap-2">
            <h2 className="text-3xl md:text-4xl font-extrabold leading-tight">
              Colors to complement<br className="hidden md:block" /> any architecture
            </h2>
            <p className="copy-muted max-w-3xl">
              Choose from a variety of colors for your resin-bound surfaces, designed to enhance the beauty of your home.
            </p>
          </div>

          {/* Slider */}
          <div className="flex flex-col gap-6">
            {/* Slides */}
            <div className="relative w-full overflow-hidden rounded-2xl">
              <div className="flex transition-transform duration-500" style={{ transform: `translateX(-${selectedIndex * 100}%)` }}>
                {colors.map((c) => (
                  <div key={c.name} className="min-w-full flex-shrink-0">
                    <article className="rounded-xl border border-slate-200 bg-white overflow-hidden transition-transform duration-200 group-hover:scale-[1.03] group-hover:shadow h-full flex flex-col">
                      <div className="relative w-full aspect-[16/10]">
                        <Image
                          src={c.src}
                          alt={`Resin-bound color: ${c.name}`}
                          fill
                          sizes="(max-width: 640px) 75vw, (max-width: 1024px) 45vw, (max-width: 1280px) 32vw, 24vw"
                          className="object-cover"
                        />
                      </div>
                      <div className="p-3 text-center font-medium mt-auto">{c.name}</div>
                    </article>
                  </div>
                ))}
              </div>
            </div>

            {/* Dots navigation */}
            <div className="flex justify-center gap-2">
              {colors.map((_, i) => (
                <button
                  key={i}
                  onClick={() => setSelectedIndex(i)}
                  className={['h-2.5 w-2.5 rounded-full transition', selectedIndex === i ? 'bg-indigo-600' : 'bg-slate-300 hover:bg-slate-400'].join(' ')}
                  aria-label={`Slide ${i + 1} of ${colors.length}`}
                />
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

/* filepath: /Users/aaronspaulding/Downloads/stoneandresin-site-main/app/page.tsx */
<section className="container py-12">
  <div className="bg-white rounded-2xl border border-slate-200 shadow-sm p-6 md:p-8">
    <ColorsSlider showHeading={false} className="py-0" />
  </div>
</section>
